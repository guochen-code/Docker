docker image history <image name>

docker image inspect <image name> # meta data about the image # can find exposed ports which you want to open up if accept connections

image and their layers:
- images are made up of file system changes and metadata
- each layer is uniquely identified and only stored once on a host
- this saves storage space on host and transfer time on push/pull
- a container is just a single read/write layer on top of image

*********************************************************************************************** image tag and push to docker hub
docker image tag # assign one or more tags to an image

# give a new tag to existing image
docker image tag nginx chenguo/nginx # a new repository with tag name latest # latest is just default string, does not necessarily mean it is really latest
docker image tag nginx chenguo/nginx:cccc # a new repository with tag name cccc
docker image tag --help # refresh memory
docker image ls # will see this image, but actually have sam image id as the official nginx image
docker image push chenguo/nginx
# in order to push, repository name must be in compliance with certain format, that's why we have slash here

*********************************************************************************************** build image
prepare a docker file
docker image build -t customnginx . # -t: give a tag name, but customnginx is repository name. if want a tag name, use: -t customnginx:tag_name # . means from current folder


*********************************************************************************************** clean images
docker image prune # clean up just 'dangling' images
docker system prune # clean up everything
docker image prune -a # remove all images not in use
docker system df # see space usage

summary:
docker build -t testnode . # use dockerfile to build an image
docker container run --rm -p 80:3000 testnode # run the image 
docker image tag test node guochen2011gc/testing_node # rename the repository name to be in compliance with format
docke push guochen2011gc/testing_node # push to hub
docker image rm guochen2011gc/testing_node # remove from local
docker container run --rm -p 80:3000 guochen2011gc/testing_node # download from hub and run the container




